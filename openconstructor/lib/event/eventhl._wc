<?php
/**
 * Copyright 2003 - 2007 eSector Solutions, LLC
 * 
 * All rights reserved.
 * 
 * This file is part of Open Constructor (http://www.openconstructor.org/).
 * 
 * Open Constructor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 * 
 * Open Constructor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html
 * 
 * Список событий в календаре.
 * 
 * Объект вывода.
 * 
 * @author Sanjar Akhmedov
 * 
 * $Id: eventhl._wc,v 1.17 2007/02/27 11:23:18 sanjar Exp $
 */

class EventHL extends WCObject {
	var $header;
	var $srvuri, $eventid, $pid;
	var $offset, $pageSize;
	var $dateFormat;
	var $ids;
	var $no404;
	var $comingEventsOnly;
	
	function EventHL() {
		$this->DSTable = 'dsevent';
		$this->ds_type = 'event';
		$this->obj_type = 'eventhl';
		$this->srvuri = 'event/';
		$this->eventid = 'event_id';
		$this->pid = 'page';
		$this->dateFormat = '[j.m.Y]';
		$this->offset = 0;
		$this->pageSize = 10;
		$this->no404=false;
		$this->caching = 2;
		$this->cached_by_WC = true;
	}
	
	function getCacheId() {
		$cacheId = null;
		if(!$this->ids) {
			$page = (int)@$_GET[$this->pid];
			if(--$page < 0) $page = 0;
			$displayed = &$this->getDisplayedDocs();
			$cacheId = $this->obj_id.'|p'.$page.'-c'.implode(':', array_keys($displayed));
		}
		return $cacheId;
	}
	
	function fetchData(&$smarty) {
		$result = false;
		$page = (int)@$_GET[$this->pid];
		if(--$page < 0) $page = 0;
		
		$where = $this->ids ? 'id IN ('.$this->ids.')' : 'ds_id IN ('.$this->ds_id.')';
		if ($this->comingEventsOnly) {
			$gmtOffset = -date('Z') + WC_TIMEZONE;
			$where .= ' AND end_date >= ' . (time() + $gmtOffset);
		}
		$db = &$this->ctx->_getDB();
		$res = $db->query(
			'SELECT id, real_id as rid, header, date, end_date, place'.
			' FROM '.$this->DSTable.
			' WHERE '.$where.' AND published!=0 '.
			' ORDER BY date '.($this->comingEventsOnly ? 'ASC' : 'DESC').
			' LIMIT '.($this->offset+$page*$this->pageSize).','.$this->pageSize
		);
		if(mysql_num_rows($res) > 0) {
			$fet=array();
			$displayed = &$this->getDisplayedDocs();
			$href = $this->srvuri.'?'.$this->eventid.'=';
			while($row = mysql_fetch_assoc($res)) {
				if(isset($fet[$row['rid']])) continue;
				$fet[$row['rid']] = true;
				$event[$row['id']]['header']=escapeTags($row['header']);
				$event[$row['id']]['href'] = isset($displayed[$row['id']]) ? '' : $href.$row['id'];
				$event[$row['id']]['place']=$row['place'];
				$event[$row['id']]['begin']=wcfFormatTime($this->dateFormat, $row['date']);
				$event[$row['id']]['end']=wcfFormatTime($this->dateFormat, $row['end_date']);
			}
			$smarty->assign('header', $this->header);
			$smarty->assign_by_ref('events', $event);
			$result = array('header', 'events');
		} elseif($page > 1 && !$this->no404)
			$this->ctx->throw404();
		mysql_free_result($res);
		return $result;
	}
	
	function &getDisplayedDocs() {
		if(!isset($this->_dispalyedDocs))
			$this->_displayedDocs = class_exists('eventbody') ? EventBody::getDisplayedDocs() : array();
		return $this->_displayedDocs;
	}
}
?>