<?php
/**
 * Copyright 2003 - 2007 eSector Solutions, LLC
 *
 * All rights reserved.
 *
 * This file is part of Open Constructor (http://www.openconstructor.org/).
 *
 * Open Constructor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * Open Constructor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html
 *
 * @author Sanjar Akhmedov
 *
 * $Id: siteview._wc,v 1.3 2007/02/27 11:23:21 sanjar Exp $
 */

class TreeSiteView {
	var $tree;
	var $selectedNodeId;
	var $_result = null;

	function TreeSiteView() {
		$this->tree = null;
		$this->selectedNodeId = 0;
	}

	function exportNode(&$node, $uri = '/', $level = 0) {		if($level == 0)
			$this->_result = array();
		if($node->id != $this->tree->root->id)
			$uri .= $node->key.'/';
        if($node->id == $this->selectedNodeId) $at = 1;
        elseif($this->tree->contains($node->id, $this->selectedNodeId)) $at = 2;
        else $at = 0;
		$this->_result[$node->index] = array(
			'id' => $node->id,
			'index' => $node->index,
			'level' => $level,
			'title' => $node->header,
			'uri' => $uri,
			'at' => $at,
			'published' => $node->published,
			'obj' => &$node,
			'children' => array()
		);

		if(sizeof($node->node)) {			foreach($node->node as $k => $v) {				$this->_result[$node->index]['children'][] = $node->node[$k]->index;
				$this->exportNode(&$node->node[$k], $uri, $level + 1);
			}
		}

		if($level == 0)
			ksort($this->_result);
		return $this->_result;
	}

	function setSelected($nodeId) {
		$this->selectedNodeId = $nodeId;
	}

	function setTree(&$tree) {
		$this->tree = &$tree;
	}
}
?>