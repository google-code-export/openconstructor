<?php
/**
 * Copyright 2003 - 2007 eSector Solutions, LLC
 *
 * All rights reserved.
 *
 * This file is part of Open Constructor (http://www.openconstructor.org/).
 *
 * Open Constructor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * Open Constructor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html
 *
 * $Id: headline._wc,v 1.11 2007/02/27 11:23:19 sanjar Exp $
 */
	require_once(LIBDIR.'/objmanager._wc');
	$obj = &$page->getObjects();
	$blocks = array();
	$stubs = array();
	$events = Page::getAllEvents();

	if($tpl) {
		foreach($tpl->blocks as $id => $v) {
			$blocks[] = $id;
			if(!$v['run'])
				$stubs[$id] = 1;
		}
	}

	uasort($obj, '_cmp_obj');
	usort($blocks, '_cmp_block_name');
	$objIds = array_keys($obj);
	$crumbsExists = false;

	foreach($objIds as $id) {
		$icon[$id] = $i_t[$obj[$id]['type']];
		if(ObjManager::isCrumbsClass($obj[$id]['type'])) {
			$crumbsExists = true;
			$obj[$id]['crumbs'] = '<input type="checkbox" name="crumbs['.$id.']"'.($obj[$id]['crumbs'] ? ' checked':'').'/>';
		} else
			$obj[$id]['crumbs'] = '';

		$b = $obj[$id]['block'];
		$obj[$id]['published'] = $b ? true : false;
		$t = &$obj[$id]['block'];
		$t = "<select name='block[$id]' id='block$id' onchange='blockChanged($id)' old='+'><option value='+' class='gray'>-</option>";
		if(ObjManager::isObserverClass($obj[$id]['type']))
			foreach($events as $evt) {
				$t .= sprintf("<option value='@{$evt}' class='event' %s>$evt</option>", $obj[$id]['observer'] && $b == $evt ? 'selected' : '');
			}
		foreach($blocks as $v)
			$t .= sprintf("<option value='$v'%s%s>$v</option>", isset($stubs[$v]) ? ' class="stub"' : '', $b == $v ? ' selected' : '');
		$t .= "</select><img src='".WCHOME.'/i/'.SKIN."/images/b/stop.gif' id='img$id' />";
		$obj[$id]['class'] = @$o_t[$obj[$id]['type']];
	}

	$fields = array(
		'name'=>HL_OBJECT_NAME,
		'crumbs'=>HL_CRUMBS,
		'class'=>HL_TYPE,
		'block'=>HL_BLOCK
	);
	if(!$crumbsExists)
		unset($fields['crumbs']);

	if($router) {
		$pageHref = $sitemap->node[$router]->getFullKey('/');
		$pageHref = $pageHref.'index.php'.substr($page->uri, strlen($pageHref) - 1);
	} else
		$pageHref = $page->uri;

	function _cmp_block_name($a, $b) {
		$cmp = strcmp($a, $b);
	    if($cmp == 0)
			return 0;
		elseif(empty($a))
			return -1;
		elseif(empty($b))
			return 1;
		elseif($a == 'PRE' || $b == 'POST')
			return -1;
		elseif($a == 'POST' || $b == 'PRE')
			return 1;
	    return $cmp;
    }

	function _cmp_obj(&$a, &$b) {
		if($a['block'] == '')
			return $b['block'] == '' ? strcmp($a['name'], $b['name']) : -1;
		elseif($b['block'] == '')
			return 1;
		elseif($a['observer'] == $b['observer']) {
			if($a['observer']) {
				$ai = array_search($a['block'], $GLOBALS['events']);
				$bi = array_search($b['block'], $GLOBALS['events']);
			} else {
				$ai = array_search($a['block'], $GLOBALS['blocks']);
				$bi = array_search($b['block'], $GLOBALS['blocks']);
			}
			return $ai == $bi ? strcmp($a['name'], $b['name']) : ($ai < $bi ? -1 : 1);
		}
		return $a['observer'] ? -1 : 1;
	}

?>