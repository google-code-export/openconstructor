<?php
/**
 * Copyright 2003 - 2007 eSector Solutions, LLC
 * 
 * All rights reserved.
 * 
 * This file is part of Open Constructor (http://www.openconstructor.org/).
 * 
 * Open Constructor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 * 
 * Open Constructor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html
 * 
 * Листалка для картинки фотогалереи.
 * 
 * Объект вывода.
 * 
 * @author Sanjar Akhmedov
 * 
 * $Id: galleryimgpager._wc,v 1.5 2007/02/27 11:23:21 sanjar Exp $
 */

class GalleryImgPager extends WCObject {
	var $ds_id;
	var $pagerSize;
	var $header;
	var $master;
	
	function GalleryImgPager() {
		$this->DSTable='dsgallery';
		$this->ds_type='gallery';
		$this->obj_type='galleryimgpager';
		$this->pagerSize=10;
		$this->master=NULL;
		$this->caching=2;
		$this->cached_by_WC=true;
	}
	
	function getCacheId() {
		$master = &$this->ctx->getObject($this->master);
		return is_object($master)
			? $this->obj_id.'|ds'.intval($master->getDsId()).'-o'.intval(@$_GET[$master->imageid])
			: null;
	}
	
	function fetchData(&$smarty) {
		$result = false;
		settype($this->master, 'int');
		$master = &$this->ctx->getObject($this->master);
		if(!is_object($master))
			return $result;
		$current = intval(@$_GET[$master->imageid]) + !intval(@$_GET[$master->imageid]);
		$ds_id = $master->getDsId(); 
		if(!$ds_id) return;
		if ($master->isPub) {
			$query=
				'SELECT COUNT(*) as items '.
				'FROM '.$this->DSTable.' g INNER JOIN dspublication p ON (g.ds_id=p.gallery) '.
				' WHERE g.published!=0 AND p.id IN ('.$ds_id.')';
		} else {
			$query=
				'SELECT COUNT(*) as items '.
				'FROM '.$this->DSTable.' '.
				'WHERE ds_id IN ('.$ds_id.') AND published!=0';
		}
		$db = &$this->ctx->_getDB();
		$res = $db->query($query);
		$items = mysql_result($res,0,'items');
		mysql_free_result($res);
		$pages = intval($items);
		if($pages > 1) {
			$first=$current-intval($this->pagerSize/2)+!($this->pagerSize%2)*1;
			if($first<1) $first=1;
			$last=$first+$this->pagerSize-1;
			if($last>$pages) {$first-=$last-$pages;$last=$pages;}
			if($first<1) $first=1;
			$get = array();
			parse_str($_SERVER['QUERY_STRING'],$get);
			unset($get[$master->imageid]);
			$ref='?';
			foreach($get as $k=>$v)
				$ref.=$k.'='.$v.'&';
			$ref.=$master->imageid.'=';
	
			if($current>1) {
				$pfirst=$ref.'1';
				$pprev=$ref.($current-1);
			} else {
				$pfirst=null;
				$pprev=null;
			}
			
			$ppages=array();
			for($i=$first;$i<=$last;$i++)
				$ppages[$i]=$i!=$current?$ref.$i:null;
			
			if($current<$pages){
				$pnext=$ref.($current+1);
				$plast=$ref.$pages;
			} else {
				$pnext=null;
				$plast=null;
			}
			$smarty->assign_by_ref('first',$pfirst);
			$smarty->assign_by_ref('prev',$pprev);
			$smarty->assign_by_ref('pages',$ppages);
			$smarty->assign_by_ref('next',$pnext);
			$smarty->assign_by_ref('last',$plast);
			$result = array('first', 'prev', 'pages', 'next', 'last');
		}
		return $result;
	}
	
	function &_getDSFields() {
		static $result;
		if(!is_array(&$result)) $result = array('master');
		return $result;
	}
}
?>