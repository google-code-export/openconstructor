<?php
/**
 * Copyright 2003 - 2007 eSector Solutions, LLC
 * 
 * All rights reserved.
 * 
 * This file is part of Open Constructor (http://www.openconstructor.org/).
 * 
 * Open Constructor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 * 
 * Open Constructor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html
 * 
 * $Id: headlines._wc,v 1.13 2007/02/27 11:23:26 sanjar Exp $
 */
function get_headline($table, $ds_id, $fields, $pagesize, $page = 1, $searchclause = '') {
	$result = array(0, array());
	$db = &WCDB::bo();
	$page = intval($page);
	if(--$page < 0)
		$page = 0;
	if(is_array($searchclause)) {
		$query = 
			'SELECT SQL_CALC_FOUND_ROWS id, d.date, '.preg_replace('/(^|,)\s*([A-Za-z0-9_])/u', '$1d.$2', $fields).' '.
			'FROM '.$table.' d, '.$searchclause['from'].' '.
			'WHERE d.ds_id='.$ds_id.' AND '.$searchclause['clause'].' '.
			'ORDER BY '.$searchclause['order'].' DESC '.
			'LIMIT '.($page * $pagesize).','.$pagesize;
	} else {
		$query = 
			'SELECT SQL_CALC_FOUND_ROWS id, date, '.$fields.' '.
			'FROM '.$table.' '.
			'WHERE ds_id='.$ds_id.' '.$searchclause.
			'ORDER BY date DESC '.
			'LIMIT '.($page * $pagesize).','.$pagesize;
	}
	$res = $db->query($query);
	if(mysql_num_rows($res) > 0) {
		$r = $db->query('SELECT FOUND_ROWS()');
		list($result[0]) = mysql_fetch_row($r);
		mysql_free_result($r);
		
		$fields = explode(',', strtolower($fields));
		for($i = 0, $l = sizeof($fields); $i < $l; $i++)
			if(utf8_strpos($fields[$i], ' as ') > 0)
				list($tmp, $fields[$i]) = explode(' as ', $fields[$i]);
			
		while($row = mysql_fetch_assoc($res)) {
			for($i = 0; $i < $l; $i++)
				$hl[$row['id']][$fields[$i]] = $row[$fields[$i]];
			$hl[$row['id']]['date'] = date('j M Y', ($t = strtotime($row['date'])) != -1 ? $t : $row['date']);
		}
		$result[1] = &$hl;
	}
	mysql_free_result($res);
	return $result;
}

function &get_hybrid_headline($ds_id, $fetchSub, $fetchDS, $pagesize, $page = 1, $searchclause = '') {
	return get_filtered_headline($ds_id, -1, $t = null, $fetchSub, $fetchDS, $pagesize, $page, $searchclause);
}

function &get_filtered_headline($ds_id, $nodeId, &$tree, $fetchSub, $fetchDS, $pagesize, $page = 1, $searchclause = '') {
	$result = array(0, array());
	$db = &WCDB::bo();
	$page=intval($page);
	if(--$page<0) $page=0;
	if($nodeId != -1) {
		$nodeId = explode(',', $nodeId);
		for($i = 0, $l = sizeof($nodeId); $i < $l; $i++) {
			settype($nodeId[$i], 'int');
			if($nodeId[$i] <= 0)
				unset($nodeId[$i]);
		}
		$fetchNode = $tree && sizeof($nodeId) > 1;
		$nodeId = implode(',', $nodeId);
	} else {
		$fetchNode = false;
		$nodeId = null;
	}
	if($fetchSub) {
		$query = 'SELECT SQL_CALC_FOUND_ROWS '.($fetchNode ? 'GROUP_CONCAT(c.node ORDER BY c.node SEPARATOR ",") as node, ' : '').'ds.id'.($fetchDS ? ', d.ds_id AS ds_id': '').', dss.name, d.published, d.header, d.date AS date'.
			" FROM ".($nodeId ? "catalogdocs c, " : '')."dshybrid_{$ds_id} ds, dshybrid d, datasources dss%2\$s".
			' WHERE '.($nodeId ? "c.node IN ($nodeId) AND c.doc = ds.id AND " : '' ).'ds.id = d.id AND d.ds_id = dss.ds_id %1$s'.
			($nodeId ? ' GROUP BY c.doc' : '').
			' ORDER BY %3$s d.date DESC'.
			' LIMIT '.intval($page * $pagesize).','.intval($pagesize);
	} else {
		$query = 'SELECT SQL_CALC_FOUND_ROWS '.($fetchNode ? 'GROUP_CONCAT(c.node ORDER BY c.node SEPARATOR ",") as node, ' : '').'d.id, d.published, d.header, d.date AS date'.
			' FROM '.($nodeId ? "catalogdocs c, " : '').'dshybrid d, datasources dss%2$s'.
			' WHERE '.($nodeId ? "c.node IN ($nodeId) AND c.doc = d.id AND " : '' ).'d.ds_id = '.$ds_id.' AND d.ds_id = dss.ds_id %1$s'.
			($nodeId ? ' GROUP BY c.doc' : '').
			' ORDER BY %3$s d.date DESC'.
			' LIMIT '.intval($page * $pagesize).','.intval($pagesize);
	}
	if(!is_array($searchclause))
		$query = sprintf($query, $searchclause, '', '');
	else
		$query = sprintf($query, 'AND '.$searchclause['clause'], ', '.$searchclause['from'], $searchclause['order'].', ');
	$res = $db->query($query);
	if(mysql_num_rows($res) > 0) {
		$r = $db->query('SELECT FOUND_ROWS()');
		list($result[0]) = mysql_fetch_row($r);
		mysql_free_result($r);
		
		while($row = mysql_fetch_assoc($res)) {
			$id = intval($row['id']);
			$hl[$id] = array(
				'published'=>$row['published'] == 1,
				'header'=>$row['header'],
				'date'=>date('j M Y', $row['date'])
			);
			if($fetchDS) {
				$hl[$id]['ds_id'] = (int)$row['ds_id'];
				$hl[$id]['type'] = '<u>'.$row['name'].'</u>';
			}
			if($fetchNode) {
				$tmp = explode(',', $row['node']);
				for($i = 0, $l = sizeof($tmp); $i < $l; $i++)
					$tmp[$i] = $tree->node[$tmp[$i]]->header;
				$hl[$id]['description'] = '<u>'.implode('<br>', $tmp).'<u>';
			}
		}
		$result[1] = &$hl;
	}
	mysql_free_result($res);
	return $result;
}
	
function get_index_clause($subj){
	$clause = '';
	if($subj) {
		loadClass('searcher', '/search/searcher._wc');
		$searcher = &Searcher::getInstance();
		$clause  = $searcher->getQueryPart($subj, 'd');
	}
	return $clause;
}

function get_clause($subj, $fields) {
	$f = explode(',',$fields);
	if(empty($subj) || sizeof($f) < 1)
		return '';
	$clause = array();
	foreach($f as $fn)
		$clause[] = $fn.' LIKE "%'.addslashes(strtr($subj, array('%' => '\%', '_' => '\_'))).'%"';
	return ' AND ('.implode(' OR ', $clause).') ';
}
?>
