<?php
/**
 * Copyright 2003 - 2007 eSector Solutions, LLC
 * 
 * All rights reserved.
 * 
 * This file is part of Open Constructor (http://www.openconstructor.org/).
 * 
 * Open Constructor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 * 
 * Open Constructor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html
 * 
 * Листалка для списка картинок фотогалереи.
 * 
 * Объект вывода.
 * 
 * @author Sanjar Akhmedov
 * 
 * $Id: gallerypager._wc,v 1.7 2007/02/27 11:23:21 sanjar Exp $
 */

class GalleryPager extends WCObject {
	var $ds_id;
	var $pagerSize;
	var $header;
	var $master;
	
	function GalleryPager() {
		$this->DSTable='dsgallery';
		$this->ds_type='gallery';
		$this->obj_type='gallerypager';
		$this->pagerSize=10;
		$this->master=NULL;
		$this->caching=2;
		$this->cached_by_WC=true;
	}
	
	function getCacheId() {
		$master = &$this->ctx->getObject($this->master);
		if(is_object($master)) {
			$page = (int) @$_GET[$master->pid];
			if(--$page < 0) $page = 0;
			$cacheId = $this->obj_id.'|ds'.$master->getDsId().'-p'.$page;
		} else
			$cacheId = null;
		return $cacheId;
	}
	
	function fetchData(&$smarty) {
		$result = false;
		settype($this->master, 'int');
		$master = &$this->ctx->getObject($this->master);
		if(!is_object($master)) return $result;
		$current = intval(@$_GET[$master->pid])+!intval(@$_GET[$master->pid]);
		$ds_id = $master->getDsId();
		if(!$ds_id) return $result;
		
		$db = &$this->ctx->_getDB();
		$res = $db->query(
			'SELECT COUNT(*) as items'.
			' FROM '.$this->DSTable.' ds'.($master->dynamic_ds ? ', dspublication p':'').
			' WHERE '.($master->dynamic_ds
				? 'p.id='.$ds_id.' AND p.published != 0 AND p.gallery=ds.ds_id'
				: 'ds_id IN ('.$ds_id.')'
				).
			' AND ds.published!=0'
		);
		$items=mysql_result($res,0,'items');
		mysql_free_result($res);
		$pages=intval($items/$master->pageSize)+intval(($items%$master->pageSize)&&true);
		if($pages > 1) {
			$first=$current-intval($this->pagerSize/2)-!($this->pagerSize%2)*1;
			if($first<1) $first=1;
			$last=$first+$this->pagerSize-1;
			if($last>$pages) {$first-=$last-$pages;$last=$pages;}
			if($first<1) $first=1;
			$ref=$_SERVER['QUERY_STRING'];
			if($ref) {	
				$ref = '?'.preg_replace('/(&?)'.$master->pid.'=(.(?!&))*.(&|$)/', '\\1', $ref);
				$ref .= (strrpos($ref,'&') + 1 < strlen($ref) ? '&' : '').$master->pid.'=';
			} else
				$ref = "?{$master->pid}=";
		
			if($current>1) {
				$pfirst=$ref.'1';
				$pprev=$ref.($current-1);
			} else {
				$pfirst=null;
				$pprev=null;
			}
			
			$ppages=array();
			for($i=$first;$i<=$last;$i++)
				$ppages[$i]=$i!=$current?$ref.$i:null;
			
			if($current<$pages){
				$pnext=$ref.($current+1);
				$plast=$ref.$pages;
			} else {
				$pnext=null;
				$plast=null;
			}
			$smarty->assign_by_ref('first',$pfirst);
			$smarty->assign_by_ref('prev',$pprev);
			$smarty->assign_by_ref('pages',$ppages);
			$smarty->assign_by_ref('next',$pnext);
			$smarty->assign_by_ref('last',$plast);
			$result = array('first', 'prev', 'pages', 'next', 'last');
		}
		return $result;
	}
	
	function &_getDSFields() {
		static $result;
		if(!is_array(&$result)) $result = array('master');
		return $result;
	}
}
?>