<?php
/**
 * Copyright 2003 - 2007 eSector Solutions, LLC
 * 
 * All rights reserved.
 * 
 * This file is part of Open Constructor (http://www.openconstructor.org/).
 * 
 * Open Constructor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 * 
 * Open Constructor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html
 * 
 * Список страниц с интро.
 * 
 * Объект вывода.
 * 
 * @author Rustam Akhmedov
 * @author Sanjar Akhmedov
 * 
 * $Id: htmltexthlintro._wc,v 1.8 2007/02/27 11:23:21 sanjar Exp $
 */

class HTMLTextHLIntro extends WCObject {
	var $introSize;
	var $pageId, $children, $exclude;
	
	function HTMLTextHLIntro() {
		$this->DSTable='dshtmltext';
		$this->ds_type='htmltext';
		$this->obj_type='htmltexthlintro';
		$this->header='';
		$this->cutIntro=NULL;
		$this->pageId = 0;
		$this->children = false;
		$this->exclude = array();
		$this->more='...';
		$this->caching=2;
		$this->cached_by_WC=true;
	}
	
	function getCacheId() {
		$pageId = $this->pageId > 0 ? $this->pageId : $this->ctx->page->id;
		$cacheId = $this->obj_id.'|'.$pageId.'|'.$this->ctx->page->id;
		return $cacheId;
	}
	
	function fetchData(&$smarty) {
		$ctx = &$this->ctx;
		$result = array('header', 'pages', 'more'); settype($this->cutIntro, 'int');
		$pageId = $this->pageId > 0 ? $this->pageId : $ctx->page->id;
		if(!isset($ctx->map->id[$pageId]))
			return false;

		if($this->children) {
			$m = &$ctx->map;
			$sub = array_diff($m->getChildrenOf($m->id[$pageId]['uri']), $this->exclude);
			foreach($sub as $id) {
				$p = &$m->id[$id];
				$pages[$id] = array(
					'href' => $ctx->map->getHref($p['uri']),
					'at' => $ctx->page->isChildOf($p['uri'], false),
					'header' => $p['title']
				);
			}
			unset($m);
		} else
			$pages[$pageId] = array(
				'href' => $ctx->map->getHref($ctx->map->id[$pageId]['uri']),
				'at' => $ctx->page->isChildOf($ctx->map->id[$pageId]['uri'], false),
				'header' => $ctx->map->id[$pageId]['title']
			);
		$db = &$this->ctx->_getDB();
		$res = $db->query(
			'SELECT id, intro '.
			'FROM '.$this->DSTable.' '.
			'WHERE id IN ('.implode(',', array_keys($pages)).') AND ds_id='.$this->ds_id.' AND published!=0'
		);
		if(mysql_num_rows($res) > 0)
			while($r = mysql_fetch_assoc($res))
				$pages[$r['id']]['intro'] = $this->cutIntro > 0
					? $this->create_intro($r['intro'], $this->cutIntro)
					: $r['intro'];
		mysql_free_result($res);
		
		$smarty->assign('header', $this->header);
		$smarty->assign_by_ref('pages', $pages);
		$smarty->assign_by_ref('more', $this->more);
		
		return $result;
	}
	
	function &create_intro(&$txt, $size) {
		$txt = strip_tags($txt);
		preg_match('/^.{'.($size-1).'}[^\s\.,:]*/ums', $txt, $intro);
		return @$intro[0] ? $intro[0] : $txt;
	}
}
?>