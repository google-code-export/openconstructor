<?php
/**
 * Copyright 2003 - 2007 eSector Solutions, LLC
 * 
 * All rights reserved.
 * 
 * This file is part of Open Constructor (http://www.openconstructor.org/).
 * 
 * Open Constructor is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 * 
 * Open Constructor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html
 * 
 * @author Sanjar Akhmedov
 * 
 * $Id: dstextpool._wc,v 1.11 2007/02/27 11:23:26 sanjar Exp $
 */
class DSTextPool extends WCDataSource {
	var $stripHTML;
	var $allowedTags;
	var $autoPublish;
	
	function DSTextPool() {
		$this->ds_type='textpool';
		$this->DSTable='dstextpool';
		$this->size=0;
		$this->stripHTML=true;
		$this->allowedTags='<a href,target><strong><b><em><i><u><p align><br><ul><ol><li><nobr><span><** id,name,class,style,title>';
		$this->autoPublish=true;
		$this->isIndexable=false;
	}
	
	function add($header, $html) {
		WCS::assert($this, 'createdoc');
		assert(trim($header) != '');
		if($this->isFull()) return false;
		$html = $this->cleanHTML($html);
		$db = &WCDB::bo();
		$db->query(
			'INSERT INTO '.$this->DSTable.
				' (ds_id, published, header, html, date, wcsowner)'.
			'VALUES'.
				' ('.$this->ds_id.', '.intval($this->autoPublish).', "'.addslashes($header).'", "'.addslashes($html).'", "'.time().'", '.Authentication::getOriginalUserId().')'
		);
		$id = $db->lastInsertId();
		if($id) {
			$db->query(
				'UPDATE '.$this->DSTable.
				' SET real_id='.$id.
				' WHERE id='.$id
				);
			$this->updateSize();
			if($this->autoPublish) {
				$this->addToIndex($id, $header, $html, $html);
			}
		}
		return $id;
	}
 		
	function delete($ids) {
		WCS::assertValue(WCS::decide($this, 'removedoc') || WCS::ownerAllowed($this->getSDoc(), 'removedoc'), $this, 'removedoc');
		$this->filterDocs($ids);
		if(sizeof($ids)) {
			$db = &WCDB::bo();
			$ids = implode(',', $ids);
			$db->query(
				'DELETE FROM '.$this->DSTable.
				' WHERE id IN('.$ids.') OR real_id IN('.$ids.')'
			);
			$this->updateSize();
			$this->removeFromIndex($ids);
			$this->evictDocCache($ids);
		}
	}
	
	function update($id,$header,$html) {
		assert($header != '');
		$rec = $this->get_record($id);
		assert($rec['id'] == $rec['real_id']);
		$doc = $this->wrapDocument($rec);
		assert($doc->id > 0);
		WCS::assertValue(WCS::decide($doc, 'editdoc') || WCS::decide($this, 'editdoc'), $doc, 'editdoc');
		$html = $this->cleanHTML($html);
		$ids = $this->getAliases($id, true);
		$db = &WCDB::bo();
		$db->query(
			'UPDATE '.$this->DSTable.
			' SET header="'.addslashes($header).'", html="'.addslashes($html).'", date="'.time().'"'.
			' WHERE id IN('.implode(',',$ids).')'
		);
		
		$this->updateIndex($id, $header, $html, $html);
		$this->evictDocCache($ids);
		return true;
	}
	
	function create_alias($id){
//		WCS::assert($this, 'createdoc');
		if(!@$id) return false;
		$res=$this->get_record($id, true);
		if($res==NULL) return false;
		$db = &WCDB::bo();
		$db->query(
			'INSERT INTO '.$this->DSTable.
				' (real_id, ds_id, published, header, html, date, wcsowner)'.
			'VALUES'.
				' ('.$id.', '.$this->ds_id.', '.intval($this->autoPublish).', "'.$res['header'].'", "'.$res['html'].'", "'.$res['date'].'", '.Authentication::getOriginalUserId().')'
		);
		return;
	}

	function &getIndexableDocs($id = null) {
		$result = array();
		$cond = ($id != null ? "id IN ($id) AND " : '')."ds_id = {$this->ds_id}";
		$db = &WCDB::bo();
		$res = $db->query("SELECT id, header, html as content, html as intro FROM {$this->DSTable} WHERE $cond AND published");
		for($i = 0, $l = mysql_num_rows($res); $i < $l; $i++)
			$result[$i] = mysql_fetch_assoc($res);
		mysql_free_result($res);
		return $result;
	}
	
	function &getCopiableProps() {
		static $result;
		if(!is_array($result))
			$result = array('allowedTags', 'stripHTML', 'autoPublish');
		return $result;
	}
}
?>